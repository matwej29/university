# pi / 2 = 1.570796326794896619231321691639751442098584699687552910487472296153908203480
# sec(pi / 2) = undefined
# pi / 3 = 1.0471975511965977461542144610931676280657231331250352736581078625
# sec(pi / 3) = 1.15470053837925152901829756100391491136259746264338327950288419716939937510582097494459230781640696
# pi / 4 = 0.785398163397448309615660845819875721049292349843776455243736148076954101740
# sec(pi / 4) = 1.4142135623730950488016887242096980785696718753769480731766797379907324784621070388503875343276415727
# pi = 3.14159265358979323846264338327950288419716939937510582097494459230781640696
# sec(pi) = -1
# 3pi/2 = 4.71238898038468985769396507491925432629575409906265827346141778846181640696
# sec(3pi/2) = undefined
terms = 10  # input
x = 1.570796326794896619231321691639751442098584699687552910487472296153908203480  # input
toggle = 1

# start
res = 1  # 1 - x^2/2! + x^4/4! - x^6/6! + ...   # output

# ---factorial---
i = 2
fac = 2
# ---factorial---

# ---x^n---
x_2 = x * x
x_n = x_2
# ---x^n---


def loop():
    global i, fac, x_n, x_2, terms, toggle, res

    if toggle == 1:  # jump not zero
        res -= x_n / fac
        # toggle -= 1
        # jump continue
    else:  # jump zero
        res += x_n / fac
        # toggle += 1
        # jump continue
    toggle ^= 0x1

    # ---factorial---
    i += 1
    fac *= i
    i += 1
    fac *= i
    # ---factorial---

    # ---x^n---
    x_n *= x_2
    # ---x^n---

    # ---loop---
    terms -= 1
    if terms > 0:
        loop()
    # ---loop---


loop()
print(f'{res:.10f}')
print(res)
# print(1 / res)  # sec(x) = 1/cos(x)
